# app/analyze_trending_titles.py

import json
import re
from collections import Counter, defaultdict

INPUT_PATH = "data/youtube_audio_info.json"
TREND_THRESHOLD = 2  # –º–∏–Ω–∏–º—É–º —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –¥–æ–ª–∂–Ω–æ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è

with open(INPUT_PATH, "r", encoding="utf-8") as f:
    data = json.load(f)

# –°–ª–æ–≤–∞—Ä—å: video_id -> title
titles = {vid: meta["title"] for vid, meta in data.items() if "title" in meta and meta["title"]}

# –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è: —Ç–æ–∫–µ–Ω–∏–∑–∞—Ü–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–æ–ø-—Å–ª–æ–≤
stopwords = {"the", "to", "and", "a", "of", "in", "for", "it", "with", "on", "at", "by", "is", "i", "you", "this", "that"}

# –°–ª–æ–≤–∞—Ä—å: –∫–ª—é—á–µ–≤–∞—è —Ñ—Ä–∞–∑–∞ -> —Å–ø–∏—Å–æ–∫ video_id
trends = defaultdict(list)

for vid, title in titles.items():
    title = title.lower()
    tokens = re.findall(r'\b\w+\b', title)
    filtered = [t for t in tokens if t not in stopwords]
    
    # —Å–æ–∑–¥–∞—ë–º –±–∏–≥—Ä–∞–º–º—ã (2-—Å–ª–æ–≤–Ω—ã–µ —Ñ—Ä–∞–∑—ã)
    bigrams = zip(filtered, filtered[1:])
    phrases = [" ".join(pair) for pair in bigrams]
    
    for phrase in phrases:
        trends[phrase].append(vid)

# –ü–æ–¥—Å—á—ë—Ç
print("üéµ –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ —Ç—Ä–µ–Ω–¥–æ–≤—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Ñ—Ä–∞–∑—ã:\n")
for phrase, vids in sorted(trends.items(), key=lambda x: -len(x[1])):
    if len(vids) >= TREND_THRESHOLD:
        print(f"üîπ '{phrase}' ‚Äî –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –≤ {len(vids)} –≤–∏–¥–µ–æ:")
        for vid in vids:
            print(f"    ‚Ä¢ {vid} ‚Üí {titles[vid]}")
        print()
